{"version":3,"sources":["../../../src/components/VDataTableNew/VDataTableRows.tsx"],"names":["convertToUnit","createRange","defineComponent","useExpanded","VDataTableExpandedKey","VDataTableRows","name","props","columns","type","Array","required","items","rowHeight","Number","offsetStart","startIndex","default","stopIndex","loading","Boolean","showLoader","setup","slots","toggleExpand","map","i","column","height","transform","item","rowIndex","id","undefined","length","colIndex"],"mappings":"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","sourcesContent":["import { convertToUnit, createRange, defineComponent } from '@/util'\n\nimport type { PropType } from 'vue'\nimport type { Column } from './VDataTable'\nimport { useExpanded, VDataTableExpandedKey } from './VDataTable'\n\nexport const VDataTableRows = defineComponent({\n  name: 'VDataTableRows',\n\n  props: {\n    columns: {\n      type: Array as PropType<Column[]>,\n      required: true,\n    },\n    items: {\n      type: Array as PropType<any[]>,\n      required: true,\n    },\n    rowHeight: {\n      type: Number,\n      required: true,\n    },\n    offsetStart: {\n      type: Number,\n    },\n    startIndex: {\n      type: Number,\n      default: 0,\n    },\n    stopIndex: {\n      type: Number,\n      default: 0,\n    },\n    loading: Boolean,\n    showLoader: Boolean,\n  },\n\n  setup (props, { slots }) {\n    const { toggleExpand } = useExpanded()\n\n    return () => {\n      if (props.showLoader && props.loading) {\n        return createRange(props.stopIndex - props.startIndex).map(i => (\n          <tr\n            class=\"v-data-table__tr\"\n            role=\"row\"\n            key={ `loading_${i}` }\n          >\n            { props.columns.map(column => (\n              <td\n                class={[\n                  'v-data-table__td',\n                ]}\n                style={{\n                  height: `${props.rowHeight}px`,\n                  transform: `translateY(${convertToUnit(props.offsetStart)})`,\n                }}\n                role=\"cell\"\n              >\n                loading\n              </td>\n            )) }\n          </tr>\n        ))\n      }\n\n      return props.items.map((item, rowIndex) => item[VDataTableExpandedKey as symbol] ? (\n        <tr\n          class=\"v-data-table__tr v-data-table__tr--expanded\"\n          role=\"row\"\n          key={ `expanded_${item.id}` }\n        >\n          <td\n            class=\"v-data-table__td\"\n            style={{\n              height: `${props.rowHeight}px`,\n              transform: props.offsetStart ? `translateY(${convertToUnit(props.offsetStart)})` : undefined,\n              'grid-area': `auto / 1 / auto / ${props.columns.length + 1}`,\n            }}\n          >\n            expanded row\n          </td>\n        </tr>\n      ) : (\n        <tr\n          class=\"v-data-table__tr\"\n          role=\"row\"\n          onClick={() => {\n            toggleExpand(props.startIndex + rowIndex, item)\n          }}\n          key={ `row_${item.id}` }\n        >\n          { props.columns.map((column, colIndex) => (\n            <td\n              class={[\n                'v-data-table__td',\n              ]}\n              style={{\n                height: `${props.rowHeight}px`,\n                transform: `translateY(${convertToUnit(props.offsetStart)})`,\n              }}\n              role=\"cell\"\n            >\n              { slots[`item.${column.id}`]?.() ?? item[column.id] }\n            </td>\n          )) }\n        </tr>\n      ))\n    }\n  },\n})\n"],"file":"VDataTableRows.mjs"}