{"version":3,"sources":["../../../src/components/VDataTableNew/VVirtualDataTable.tsx"],"names":["computed","onBeforeUnmount","onMounted","ref","watch","convertToUnit","defineComponent","getCurrentInstance","VDataTableHeaders","VDataTableRows","createExpanded","useHeaders","useProxiedModel","useVirtual","props","itemsLength","vm","containerRef","itemHeight","parseInt","totalHeight","value","scrollTop","chunkSize","windowSize","startIndex","stopIndex","Math","min","offsetStart","max","isScrolling","startOffset","scrollTimeout","val","emit","immediate","tableScroll","clearTimeout","setTimeout","newScrollTop","direction","diff","abs","console","log","delta","floor","addEventListener","passive","removeEventListener","VVirtualDataTable","name","headers","type","Array","required","items","height","String","Number","default","stickyHeader","Boolean","loading","showLoader","emits","scroll","load","setup","slots","rowColumns","headerRows","tableGridStyles","expandedItems","length","slice"],"mappings":"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","sourcesContent":["import { computed, onBeforeUnmount, onMounted, ref, watch } from 'vue'\nimport { convertToUnit, defineComponent, getCurrentInstance } from '@/util'\nimport { VDataTableHeaders } from './VDataTableHeaders'\nimport './VDataTable.sass'\n\nimport type { PropType, Ref } from 'vue'\nimport { VDataTableRows } from './VDataTableRows'\nimport { createExpanded, useHeaders } from './VDataTable'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\ntype DataTableHeader = {\n  id: string\n  name: string\n  colspan?: number\n  rowspan?: number\n  minWidth?: string\n  maxWidth?: string\n}\n\nexport type Column = DataTableHeader & {\n  style: any\n}\n\nconst useVirtual = (props: { height?: string | number, itemHeight: string | number }, itemsLength: Ref<number>) => {\n  const vm = getCurrentInstance('useVirtual')\n\n  const containerRef = ref<HTMLElement>()\n  const itemHeight = computed(() => parseInt(props.itemHeight, 10))\n  const totalHeight = computed(() => itemsLength.value * itemHeight.value)\n  const scrollTop = ref(0) // TODO: Scroll threshold should be relative to current position to avoid fixed load positions\n  const chunkSize = ref(30) // TODO: Should reflect height of container\n  const windowSize = computed(() => itemHeight.value * (chunkSize.value * 3))\n  // const scrollIndex = computed(() => Math.floor(scrollTop.value / itemHeight.value))\n  // const chunkIndex = computed(() => Math.floor(scrollIndex.value / chunkSize.value))\n  // const startIndex = computed(() => Math.max(0, (chunkIndex.value * chunkSize.value) - chunkSize.value))\n  const startIndex = ref(0)\n  const stopIndex = computed(() => Math.min(startIndex.value + (chunkSize.value * 3), itemsLength.value))\n  const offsetStart = computed(() => Math.max(0, startIndex.value * itemHeight.value))\n  const isScrolling = ref(false)\n\n  const startOffset = computed(() => itemHeight.value * startIndex.value)\n\n  let scrollTimeout: any = null\n\n  watch(startIndex, val => {\n    vm.emit('load', { startIndex: startIndex.value, stopIndex: stopIndex.value })\n  }, {\n    immediate: true,\n  })\n\n  function tableScroll () {\n    isScrolling.value = true\n\n    vm.emit('scroll', { startIndex: startIndex.value, stopIndex: stopIndex.value })\n\n    if (scrollTimeout) clearTimeout(scrollTimeout)\n\n    scrollTimeout = setTimeout(() => {\n      isScrolling.value = false\n\n      const newScrollTop = (containerRef.value?.scrollTop ?? 0)\n      const direction = newScrollTop > scrollTop.value ? 1 : -1\n\n      scrollTop.value = newScrollTop\n\n      const diff = Math.abs(newScrollTop - (direction < 0 ? startOffset.value : startOffset.value + windowSize.value))\n\n      console.log({\n        direction,\n        newScrollTop,\n        startOffset: startOffset.value,\n        windowSize: windowSize.value,\n        diff,\n      })\n\n      const delta = windowSize.value / 4\n\n      if (diff < delta || diff > windowSize.value) {\n        startIndex.value = Math.floor(Math.max(0, (newScrollTop - (windowSize.value / 2))) / itemHeight.value)\n      }\n    }, 100)\n  }\n\n  onMounted(() => {\n    if (!containerRef.value) return\n    containerRef.value.addEventListener('scroll', tableScroll, { passive: true })\n  })\n\n  onBeforeUnmount(() => {\n    if (!containerRef.value) return\n    containerRef.value.removeEventListener('scroll', tableScroll)\n  })\n\n  return {\n    totalHeight,\n    containerRef,\n    offsetStart,\n    startIndex,\n    stopIndex,\n    isScrolling,\n    itemHeight,\n    scrollTop,\n  }\n}\n\nexport const VVirtualDataTable = defineComponent({\n  name: 'VVirtualDataTable',\n\n  props: {\n    headers: {\n      type: Array as PropType<DataTableHeader[] | DataTableHeader[][]>,\n      required: true,\n    },\n    items: {\n      type: Array as PropType<any[]>,\n      required: true,\n    },\n    height: [String, Number],\n    itemHeight: {\n      type: [String, Number],\n      default: 48,\n    },\n    stickyHeader: Boolean,\n    loading: Boolean,\n    showLoader: Boolean,\n    itemsLength: Number,\n  },\n\n  emits: {\n    'update:loading': (loading: boolean) => true,\n    scroll: () => true,\n    load: () => true,\n  },\n\n  setup (props, { slots }) {\n    const loading = useProxiedModel(props, 'loading')\n\n    const { rowColumns, headerRows, tableGridStyles } = useHeaders(props)\n\n    const { items: expandedItems } = createExpanded(props)\n\n    const {\n      totalHeight,\n      containerRef,\n      offsetStart,\n      startIndex,\n      stopIndex,\n      isScrolling,\n      itemHeight,\n    } = useVirtual(props, computed(() => props.itemsLength ?? expandedItems.value.length))\n\n    const items = computed(() => props.itemsLength ? expandedItems.value : expandedItems.value.slice(startIndex.value, stopIndex.value))\n\n    watch(isScrolling, val => loading.value = val)\n\n    return () => {\n      return (\n        <div\n          ref={containerRef}\n          class=\"v-data-table v-virtual-data-table\"\n          style={{\n            height: convertToUnit(props.height),\n          }}\n        >\n          <table\n            class=\"v-data-table__table\"\n            style={{\n              ...tableGridStyles.value,\n              'grid-auto-rows': 'min-content',\n              height: convertToUnit(totalHeight.value),\n            }}\n            role=\"table\"\n          >\n            <thead class=\"v-data-table__thead\" role=\"rowgroup\">\n              <VDataTableHeaders rows={ headerRows.value } rowHeight={ itemHeight.value } sticky={ props.stickyHeader } />\n            </thead>\n            <tbody class=\"v-data-table__tbody\" role=\"rowgroup\">\n              <VDataTableRows\n                showLoader={ props.showLoader }\n                loading={ loading.value }\n                columns={ rowColumns.value }\n                items={ items.value }\n                rowHeight={ itemHeight.value }\n                offsetStart={ offsetStart.value }\n                startIndex={ startIndex.value }\n                stopIndex={ stopIndex.value }\n                v-slots={ slots }\n              />\n            </tbody>\n          </table>\n        </div>\n      )\n    }\n  },\n})\n"],"file":"VVirtualDataTable.mjs"}